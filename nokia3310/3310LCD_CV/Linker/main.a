;//********************************************************
;//***** PROGRAM FOR Interfacing NOKIA 3310 Display ******
;//********************************************************
;//Controller:	ATmega32 (Clock: 1 Mhz-internal)
;//Compiler:		ImageCraft ICCAVR
;//Author:		CC Dharmani, Chennai (India)
;//Date:			Sep 2008
;//********************************************************
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include "3310_routines.h"
;
;void port_init(void)
; 0001 000F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0010  PORTB = 0xFF;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0011  DDRB  = 0xFF;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0012  PORTC = 0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0013  DDRC  = 0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0014  PORTD = 0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0015  DDRD  = 0xFF;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0016 }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;//SPI initialize
;//clock rate: 250000hz
;void spi_init(void)
; 0001 001B {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 001C  SPCR = 0x58; //setup SPI
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 001D }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;//TWI initialize
;// bit rate:2 (freq: 50Khz)
;void twi_init(void)
; 0001 0022 {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0023  TWCR= 0X00; //disable twi
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0024  TWBR= 0x02; //set bit rate
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0025  TWSR= 0x00; //set prescale
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0026  TWAR= 0x00; //set slave address
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0027  TWCR= 0x44; //enable twi
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0028 }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;//call this routine to initialize all peripherals
;void init_devices(void)
; 0001 002C {
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 002D  //stop errant interrupts until set up
; 0001 002E  port_init();
;PCODE: $00000033 VOL: 0
; 0001 002F  spi_init();
;PCODE: $00000034 VOL: 0
; 0001 0030  twi_init();
;PCODE: $00000035 VOL: 0
; 0001 0031 
; 0001 0032  MCUCR = 0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0033  GICR  = 0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0034  TIMSK = 0x00; //timer interrupt sources
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 0035  //SEI(); //re-enable interrupts
; 0001 0036  //all peripherals are now initialized
; 0001 0037 }
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;
;//
;void main(void)
; 0001 003B {
;PCODE: $0000003E VOL: 0
; 0001 003C  unsigned char LED=0;
; 0001 003D 
; 0001 003E  init_devices();
;	LED -> R17
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 003F 
; 0001 0040  LCD_init();
;PCODE: $00000042 VOL: 0
; 0001 0041 
; 0001 0042  delay_ms(100);	   //delay for ds1621 write complete
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 0043 
; 0001 0044  LCD_drawBorder();
;PCODE: $00000046 VOL: 0
; 0001 0045 
; 0001 0046  LCD_gotoXY (4,2);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0001 0047  LCD_writeString_F("3310_LCD");
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0001 0048 
; 0001 0049  LCD_gotoXY (4,3);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 004A  LCD_writeString_F("by DHARMANI");
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 004B 
; 0001 004C 
; 0001 004D  while(1)
;PCODE: $00000059 VOL: 0
; 0001 004E  {
; 0001 004F    if(LED == 0)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 0050    {
; 0001 0051  	 PORTD |= 0x01;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0001 0052 	 LED = 1;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0001 0053    }
; 0001 0054    else
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0001 0055    {
; 0001 0056 	 PORTD &= ~0x01;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0001 0057 	 LED = 0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0001 0058    }
;PCODE: $00000066 VOL: 0
; 0001 0059 
; 0001 005A  }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 005B 
; 0001 005C }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
